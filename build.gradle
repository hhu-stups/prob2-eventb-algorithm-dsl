import java.util.concurrent.TimeUnit

plugins {
	id "java-library"
	id "groovy"
	id "de.hhu.stups.sablecc" version "1.1.0"
}

group = "de.hhu.stups"
version = "3.2.12-SNAPSHOT"
final isSnapshot = project.version.endsWith("-SNAPSHOT")

repositories {
	mavenCentral()
	if (isSnapshot) {
		maven {
			name "Sonatype snapshots"
			url "https://oss.sonatype.org/content/repositories/snapshots"
		}
	}
}

configurations.all {
	resolutionStrategy {
		cacheChangingModulesFor(0, TimeUnit.SECONDS)
	}
}

sourceSets {
	main {
		// Compile all sources using the Groovy compiler, to make Groovy classes visible to Java code
		groovy {
			srcDirs += java.srcDirs
		}
		java {
			srcDirs = []
		}
	}
}

dependencies {
	final sableCCVersion = "3.6.0"
	sableCC(group: "de.hhu.stups", name: "sablecc", version: sableCCVersion)
	api(group: "de.hhu.stups", name: "sablecc-runtime", version: sableCCVersion)
	implementation group: "com.github.krukow", name: "clj-ds", version: "0.0.4" // Eclipse Public License 1.0
	implementation group: "com.google.code.gson", name: "gson", version: "2.10.1" // Apache License 2.0
	api(platform(group: "de.hhu.stups", name: "prob-java-bom", version: "4.13.0"))
	api(group: "de.hhu.stups", name: "de.prob2.kernel") // Eclipse Public License 2.0

	// Test dependencies
	testImplementation group: "org.junit.vintage", name: "junit-vintage-engine" // version is set by junit-bom pulled in by spock-core
	testImplementation group: "org.spockframework", name: "spock-core", version: "2.3-groovy-4.0" // Apache License 2.0
	testRuntimeOnly(group: "de.hhu.stups", name: "de.prob2.commandline")
}

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

final SOURCE_ENCODING = "UTF-8"

tasks.withType(JavaCompile) {
	options.encoding = SOURCE_ENCODING
}

tasks.withType(GroovyCompile) {
	options.encoding = SOURCE_ENCODING
}

tasks.withType(Javadoc) {
	options.encoding = SOURCE_ENCODING
}

// The Groovydoc encoding can't be set via the task, it depends on the file.encoding system property of the Gradle JVM, which is set in the gradle.properties file.

test {
	useJUnitPlatform()
}

task groovyIntegrationTests(type: JavaExec, dependsOn: [classes, test]) {
	mainClass = "de.prob2.commandline.CommandLineMain"
	classpath = sourceSets.test.runtimeClasspath
	args = ["-script", "groovyTests"]
}
check.dependsOn(groovyIntegrationTests)

// Run a single groovy Testcase
// Usage: ./gradlew groovyTest --args="-script groovyTests/theoryIntegration.groovy"
task groovyTest(type: JavaExec) {
	mainClass = "de.prob2.commandline.CommandLineMain"
	classpath = sourceSets.test.runtimeClasspath
}
